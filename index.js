// console.log("HELLO TASNEEM123");
// console.log("Hello Techno Students");

// // variables
// let message="The Password Is Incorrect";
// console.log(message);
// alert(message);

// let hello="aquib";
// console.log(hello);

// var newdata="haris";
// console.log(newdata)

// let messagebox
// messagebox="world";
// messagebox="hello";
// console.log(messagebox)

// let admin="john";
// let name="john";
// alert(admin);

// const
// const birthday="23.04.1969";
// birthday="24.09.2004";
// console.log(birthday);

// Data type in Javascript
// 1.number
// let n= 123;
// let nf= 12.345;
// console.log(n)
// console.log(nf)

// 2.bigint
// let bigint= 1234567890n;
// console.log(bigint);

// 3.string
// let str ="HELLO";
// let str2 ='single quotes are ok too';
// let phrase= `${str} can embed another ${str2}`;
// console.log(phrase);
// alert(`the result is ${1 + 2}`);

// 4.boolean
// let isgreater=4<8;
// alert(isgreater)

// 5.null
// its just a speacial value which represents "nothing","empty", or "value unknown".
// let age="null";
// console.log(age);

// 6.undefine
// let data;
// console.log(data);

// 7.object for more complex data structures.
// 8. symbols for unique identifiers.

// Basic Opertators
// addition
// let apples =15;
// let mangoes =12;
// alert(apples + mangoes);

// 1.arithmetic operator
// a1=20;
// a2=50;
// a3= a1*a2;
// console.log(a3);

// 2.assignment operator
// a1=25
//  a1 *=10
//  console.log(a1);

// let n=2;
// n +=15;
// console.log(n);

// let t=400;
// t /=2;
// console.log(t);

// let x=1;
// x =-x;
// console.log(x);

// let z=1,y=3;
// alert(y+z);

// division
//  8/3
// alert(8/3);

// exponential 2
// alert(2 ** 2);
// alert(2 ** 3);
// alert(4 ** 2);

// '1' is String ...therefore value is 12
// alert('1'+2);
// alert('2'+1);

// alert(2+2+'1');

// 3.string operator
// let s="my"+"string";
// alert(s);

// 4.increment and decement operator 
// ++x pre-increment ...increment x by 1 then return x 
// x++ post-increment ...return x than increment by 1
// --x pre-decrement ...decrement x by 1 then return x
// x-- post-decrement ...return x than decrement by 1

// let p;
// p= 20;
// console.log(++p);
// console.log(p);

// let q;
// q= 45;
// console.log(q++);
// console.log(q);

// let r;
// r= 30;
// console.log(--r);
// console.log(r);

// let s;
// s= 56;
// console.log(s--);
// console.log(s);

// 5. logic operators
// && Logical AND:true if both the operands/boolean values are true,else evaluates to false
// || Logical OR: true if either of the operands/boolean values is true. evaluates to false if both are false
// ! Logical NOT: true if the operand is false and vice-versa.

// AND &&
// const a= true, b=false;
// const c= 4;
// console.log(a && a);
// console.log(a && b);
// console.log((c > 2) && (c < 2));

// || OR 
// const a = true, b = false, c = 4;
// console.log(a || b); // true
// console.log(b || b); // false
// console.log((c>2) || (c<2)); // true

// ! NOT 
// const a = true, b = false;
// console.log(!a); // false
// console.log(!b); // true

// url 
// https://javascript.info/operators

// 6. comparison operator 
// x="5"
// x =="5"  //true
// x === "5" //false
// console.log(x);
// url 
// https://www.w3schools.com/js/js_comparisons.asps

// 7.condition operator 
// let company = prompt('which company created javascript?');
// if(company == 'nestscape'){
//   console.log("you are right");
// }else{
//   console.log("you are wrong");
// }

// company == 'nestscape' ? console.log("you are right") :  console.log("you are wrong");

// functions 
// url 
// https://javascript.info/function-basics

// Array 
// const fruites = ["Bannana", "Mango", "Orange", "Apple"];
//       index..... 0           1         2         3
// length 4

// Properties of Array
// join()
// The join() method also joins all array elements into a string.
// pop()
// The pop() method removes the last element from an array:
// push()
// The push() method adds a new element to an array (at the end):
// shift()
// The shift() method removes the first array element and "shifts" all other elements to a lower index.
// unshift()
// The unshift() method adds a new element to an array (at the beginning), and "unshifts" older elements:
// splice()
// The splice() method can be used to add new items to an array:
// concat()
// The concat() method creates a new array by merging (concatenating) existing arrays:
// slice()
// The slice() method slices out a piece of an array into a new array.

// sort()
// reverse()
// URL https://www.w3schools.com/js/js_array_methods.asp




